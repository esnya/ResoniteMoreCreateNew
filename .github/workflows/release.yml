name: Build and Release Resonite Mod

on:
  push:
    branches:
    - master
    - main
    - ci
    - ci/*
  pull_request:
    branches:
    - master
    - main
    - ci
    - ci/*

env:
  artifact: MoreCreateNew.dll
  project_path: MoreCreateNew

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - id: checkout
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Resonite environment
      id: build-env
      uses: resonite-modding-group/setup-resonite-env-action@v0.1.0
      with:
        steam-user: ${{ secrets.STEAMUSER }}
        steam-password: ${{ secrets.STEAMPASS }}

    - name: Install ResoniteModLoader and Harmony
      run: |
        set -euo pipefail
        LIBS_PATH="${{ steps.build-env.outputs.libraries-path }}"
        RESONITE_DIR="$(dirname "${LIBS_PATH}")"
        mkdir -p "${LIBS_PATH}" "${RESONITE_DIR}/rml_libs"
        curl -fsSL -o "${LIBS_PATH}/ResoniteModLoader.dll" \
          https://github.com/resonite-modding-group/ResoniteModLoader/releases/latest/download/ResoniteModLoader.dll
        if ! curl -fsSL -o "${RESONITE_DIR}/rml_libs/0Harmony.dll" \
          https://github.com/resonite-modding-group/ResoniteModLoader/releases/latest/download/0Harmony.dll; then
          curl -fsSL -o "${RESONITE_DIR}/0Harmony.dll" \
            https://github.com/resonite-modding-group/ResoniteModLoader/releases/latest/download/0Harmony.dll
        fi

    - name: Export ResonitePath for MSBuild
      run: |
        echo "ResonitePath=$(dirname '${{ steps.build-env.outputs.libraries-path }}')/" >> $GITHUB_ENV

    - name: Build RML mod
      run: |
        dotnet restore
        dotnet build ${{ env.project_path }} --configuration Release --output ${{ github.workspace }}/${{ env.project_path }}/bin/Release/net9.0

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact }}
        path: ${{ env.project_path }}/bin/Release/net9.0/${{ env.artifact }}

  prepare-release:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/ci' || startsWith(github.ref, 'refs/heads/ci/'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version from Directory.Build.props
      id: get_version
      run: |
        VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Directory.Build.props)
        echo "Version=$VERSION" >> $GITHUB_OUTPUT

    - name: Debug version info
      run: |
        echo "Found version: ${{ steps.get_version.outputs.Version }}"

    - name: Pull tags
      run: git fetch --tags

    - name: Check if tag exists
      id: check_tag
      run: |
        echo "TagExists=$(git tag -l v${{ steps.get_version.outputs.Version }})" >> $GITHUB_OUTPUT
    outputs:
      should_release: ${{ steps.check_tag.outputs.TagExists == '' }}
      version: ${{ steps.get_version.outputs.Version }}

  release:
    if: needs.prepare-release.outputs.should_release == 'true'
    needs: [build, prepare-release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create tag
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git tag "v${{ needs.prepare-release.outputs.version }}"
        git push origin "v${{ needs.prepare-release.outputs.version }}"

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.artifact }}

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ env.artifact }}
        generate_release_notes: true
        tag_name: v${{ needs.prepare-release.outputs.version }}
